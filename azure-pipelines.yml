# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- task: Gradle@2
  inputs:
    workingDirectory: ''
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'build'
  
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: 'build/**/*-SNAPSHOT.jar'
    ArtifactName: 'drop'
    publishLocation: 'Container'

    
    
- task: CopyFiles@2
  displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
  inputs:
    SourceFolder: '$(system.defaultworkingdirectory)'
    Contents: |
     **/*.jar
    TargetFolder: '$(build.artifactstagingdirectory)'
  condition: succeededOrFailed()
      
- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: package'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
    ArtifactName: package
  condition: succeededOrFailed()